/* @(#)RubiksCubePanelDemo.java
 * Copyright (c) 2009 Werner Randelshofer, Switzerland. MIT License.
 */
package demos;

import ch.randelshofer.rubik.Cube3DCanvasIdx3D;
import ch.randelshofer.rubik.DefaultCubeAttributes;
import ch.randelshofer.rubik.cube.RubiksCube;
import ch.randelshofer.rubik.cube3d.Cube3DEvent;
import ch.randelshofer.rubik.cube3d.Cube3DListener;
import ch.randelshofer.rubik.cube3d.RubiksCubeIdx3D;
import org.jhotdraw.annotation.Nonnull;

import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 * A JPanel with an interactive Rubik's Cube.
 *
 * @author Werner Randelshofer
 */
public class RubiksCubePanelDemo extends javax.swing.JPanel {
    private final static long serialVersionUID = 1L;

    /** Creates new form RubiksCubePanelDemo */
    public RubiksCubePanelDemo() {
        initComponents();

        // Create a 3D model of the Rubik's Cube for the Idx3D rendering engine,
        // and turns animation on.
        RubiksCubeIdx3D cube3d = new RubiksCubeIdx3D();
        cube3d.setAnimated(true);

        // Create a mathematical model of a Rubik's Cube and plugs it into
        // the 3D model.
        // Note: this is not necessary, since the constructor of RubiksCubeIdx3D
        // does this already.
        RubiksCube cube = new RubiksCube();
        cube3d.setCube(cube);

        // Add a listener to the 3D cube, which twists the cube when clicked
        cube3d.addCube3DListener(new Cube3DListener() {

            public void actionPerformed(@Nonnull Cube3DEvent evt) {
                evt.applyTo(evt.getCube3D().getCube());
            }

            public void mouseEntered(Cube3DEvent evt) {
            }

            public void mouseExited(Cube3DEvent evt) {
            }

            public void mousePressed(Cube3DEvent evt) {
            }

            public void mouseReleased(Cube3DEvent evt) {
            }
            
        });

        // Orient the cube so that the faces front, up and right are visible
        DefaultCubeAttributes attr = (DefaultCubeAttributes) cube3d.getAttributes();
        attr.setAlpha((float) (Math.PI/-8f));
        attr.setBeta((float) (Math.PI/4f));
        //attr.setStickerFillColor(0, Color.GREEN);

        // Create a cube 3D canvas with the Idx3d rendering engine and add
        // the cube to it.
        Cube3DCanvasIdx3D canvas = new Cube3DCanvasIdx3D();
        canvas.setCube3D(cube3d);

        // Disable all interaction with the 3D canvas
        //canvas.setEnabled(false);

        // Add the canvas to the panel
        add(canvas.getVisualComponent());

    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                JFrame f = new JFrame("CubeTwister Rubik's Cube Panel Demo");
                f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                f.add(new RubiksCubePanelDemo());
                f.setSize(400,400);
                f.setVisible(true);
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
