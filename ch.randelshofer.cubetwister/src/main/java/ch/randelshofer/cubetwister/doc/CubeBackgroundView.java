/*
 * @(#)CubeBackgroundView.java
 * CubeTwister. Copyright Â© 2020 Werner Randelshofer, Switzerland. MIT License.
 */
package ch.randelshofer.cubetwister.doc;

import org.jhotdraw.annotation.Nonnull;
import org.jhotdraw.gui.Dialogs;

import javax.swing.JColorChooser;
import javax.swing.JComponent;
import java.awt.Color;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

/**
 * CubeBackgroundView is used in the "Options &gt; Background" panel of CubeTwister.
 *
 * @author Werner Randelshofer
 */
public class CubeBackgroundView extends AbstractEntityView {
    private final static long serialVersionUID = 1L;

    private CubeModel model;
    private JColorChooser colorChooser;

    private class ModelHandler implements PropertyChangeListener {

        public void propertyChange(@Nonnull PropertyChangeEvent evt) {
            String name = evt.getPropertyName();
            if (name == CubeModel.FRONT_BG_COLOR_PROPERTY) {
                frontViewColorWell.setBackground((Color) evt.getNewValue());
            } else if (name == CubeModel.REAR_BG_COLOR_PROPERTY) {
                rearViewColorWell.setBackground((Color) evt.getNewValue());
            }
        }
    }
    private ModelHandler modelHandler;

    /** Creates new form CubeBackgroundView */
    public CubeBackgroundView() {
        initComponents();

        frontViewColorWell.putClientProperty("Quaqua.Button.style", "colorWell");
        rearViewColorWell.putClientProperty("Quaqua.Button.style", "colorWell");

        scrollPane.getViewport().setOpaque(false);

        // XXX - We have not implemented this panel yet

        for (int i = 0,  n = panel.getComponentCount(); i < n; i++) {
            panel.getComponent(i).setEnabled(false);
        }
        bgColorLabel.setEnabled(true);
        frontViewLabel.setEnabled(true);
        frontViewColorWell.setEnabled(true);
        rearViewColorWell.setEnabled(false);
        modelHandler = new ModelHandler();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     * XXX - Unfortunately the generated code below does use constant values for
     * indentation, and it does not support non-related distances between two
     * components.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        scrollPane = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();
        bgColorLabel = new javax.swing.JLabel();
        frontViewImageWell = new ch.randelshofer.gui.JImageWell();
        frontViewLabel = new javax.swing.JLabel();
        rearViewImageWell = new ch.randelshofer.gui.JImageWell();
        rearViewLabel = new javax.swing.JLabel();
        frontViewImageCheck = new javax.swing.JCheckBox();
        frontViewColorWell = new javax.swing.JButton();
        rearViewImageCheck = new javax.swing.JCheckBox();
        rearViewColorWell = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        scrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        bgColorLabel.setText("Background Color");

        javax.swing.GroupLayout frontViewImageWellLayout = new javax.swing.GroupLayout(frontViewImageWell);
        frontViewImageWell.setLayout(frontViewImageWellLayout);
        frontViewImageWellLayout.setHorizontalGroup(
            frontViewImageWellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        frontViewImageWellLayout.setVerticalGroup(
            frontViewImageWellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        frontViewLabel.setText("Front View");

        javax.swing.GroupLayout rearViewImageWellLayout = new javax.swing.GroupLayout(rearViewImageWell);
        rearViewImageWell.setLayout(rearViewImageWellLayout);
        rearViewImageWellLayout.setHorizontalGroup(
            rearViewImageWellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        rearViewImageWellLayout.setVerticalGroup(
            rearViewImageWellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        rearViewLabel.setText("Rear View");

        frontViewImageCheck.setSelected(true);
        frontViewImageCheck.setText("Background image in front view");
        frontViewImageCheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                frontViewImageCheckChanged(evt);
            }
        });

        frontViewColorWell.setText("   ");
        frontViewColorWell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frontViewColorWellPerformed(evt);
            }
        });

        rearViewImageCheck.setSelected(true);
        rearViewImageCheck.setText("Background image in rear view");
        rearViewImageCheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rearViewImageCheckChanged(evt);
            }
        });

        rearViewColorWell.setText("   ");
        rearViewColorWell.setEnabled(false);
        rearViewColorWell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rearViewColorWellPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(frontViewImageWell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(rearViewImageWell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rearViewImageCheck)
                    .addComponent(frontViewImageCheck)
                    .addComponent(bgColorLabel)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(rearViewColorWell)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rearViewLabel))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(frontViewColorWell)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(frontViewLabel)))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bgColorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frontViewColorWell)
                    .addComponent(frontViewLabel))
                .addGap(2, 2, 2)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rearViewColorWell)
                    .addComponent(rearViewLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frontViewImageCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frontViewImageWell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(rearViewImageCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rearViewImageWell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        scrollPane.setViewportView(panel);

        add(scrollPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    private void rearViewImageCheckChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rearViewImageCheckChanged
        rearViewImageWell.setVisible(rearViewImageCheck.isSelected());
        validate();
    }//GEN-LAST:event_rearViewImageCheckChanged

    private void frontViewImageCheckChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_frontViewImageCheckChanged
        frontViewImageWell.setVisible(frontViewImageCheck.isSelected());
        validate();
    }//GEN-LAST:event_frontViewImageCheckChanged

    private void frontViewColorWellPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frontViewColorWellPerformed
        if (colorChooser == null) {
            colorChooser = new JColorChooser();
        }
        Color selectedColor = Dialogs.showColorChooserDialog(colorChooser, this, "Front View Background", model.getFrontBgColor());
        if (selectedColor != null) {
            model.setFrontBgColor(selectedColor);
        }

    }//GEN-LAST:event_frontViewColorWellPerformed

    private void rearViewColorWellPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rearViewColorWellPerformed
        if (colorChooser == null) {
            colorChooser = new JColorChooser();
        }
        Color selectedColor = Dialogs.showColorChooserDialog(colorChooser, this, "Rear View Background", model.getFrontBgColor());
        if (selectedColor != null) {
            model.setRearBgColor(selectedColor);
        }

    }//GEN-LAST:event_rearViewColorWellPerformed

    public void setModel(EntityModel newValue) {
        if (model != null) {
            model.removePropertyChangeListener(modelHandler);
        }
        model = (CubeModel) newValue;
        if (model != null) {
            frontViewImageCheck.setSelected(false);
            rearViewImageCheck.setSelected(false);
            frontViewColorWell.setBackground(model.getFrontBgColor());
            rearViewColorWell.setBackground(model.getRearBgColor());
            model.addPropertyChangeListener(modelHandler);
        }
    }

    @Nonnull
    public JComponent getViewComponent() {
        return this;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgColorLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton frontViewColorWell;
    private javax.swing.JCheckBox frontViewImageCheck;
    private ch.randelshofer.gui.JImageWell frontViewImageWell;
    private javax.swing.JLabel frontViewLabel;
    private javax.swing.JPanel panel;
    private javax.swing.JButton rearViewColorWell;
    private javax.swing.JCheckBox rearViewImageCheck;
    private ch.randelshofer.gui.JImageWell rearViewImageWell;
    private javax.swing.JLabel rearViewLabel;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
}
