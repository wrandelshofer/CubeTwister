/*
 * @(#)CubeStickersView.java
 * CubeTwister. Copyright Â© 2020 Werner Randelshofer, Switzerland. MIT License.
 */

package ch.randelshofer.cubetwister.doc;

import ch.randelshofer.undo.Undoable;
import org.jhotdraw.annotation.Nonnull;

import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.border.EmptyBorder;
import javax.swing.event.UndoableEditListener;
import java.util.prefs.Preferences;
/**
 * CubeStickersView.
 *
 * @author  Werner Randelshofer
 */
public class CubeStickersView extends JPanel implements EntityView, Undoable {
    private final static long serialVersionUID = 1L;
    private CubeModel model;
    private Preferences prefs;

    /** Creates new form. */
    public CubeStickersView() {
        prefs = Preferences.userNodeForPackage(getClass());

        initComponents();
        tabbedPane.putClientProperty("Quaqua.TabbedPane.shortenTabs", Boolean.FALSE);
        tabbedPane.putClientProperty("Quaqua.TabbedPane.contentBorderPainted", Boolean.FALSE);
        int selectedTab = prefs.getInt("CubeStickersView.selectedTab", 0);
        tabbedPane.setSelectedIndex(Math.max(0, Math.min(tabbedPane.getTabCount() - 1, selectedTab)));

        colorsView.setViewClassName("ch.randelshofer.cubetwister.doc.CubeStickerColorsView");
        imageView.setViewClassName("ch.randelshofer.cubetwister.doc.CubeStickersImageView");
         tabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
             @Override
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
prefs.putInt("CubeStickersView.selectedTab", tabbedPane.getSelectedIndex());            }
        });
        if ("Windows".equals(UIManager.getLookAndFeel().getID())) {
            setBorder(new EmptyBorder(6,6,8,7));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        colorsView = new ch.randelshofer.cubetwister.doc.LazyEntityView();
        imageView = new ch.randelshofer.cubetwister.doc.LazyEntityView();

        tabbedPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 0, 0, 0));
        tabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabbedPane.addTab("Colors", colorsView);
        tabbedPane.addTab("Image", imageView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void setModel(EntityModel newValue) {
     if (model != null) {
     }
     model = (CubeModel) newValue;
     if (model != null) {
     }
          colorsView.setModel(model);
         imageView.setModel(model);
    }

    @Nonnull
    public JComponent getViewComponent() {
        return this;
    }

    public void addUndoableEditListener(UndoableEditListener l) {
    }

    public void removeUndoableEditListener(UndoableEditListener l) {
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ch.randelshofer.cubetwister.doc.LazyEntityView colorsView;
    private ch.randelshofer.cubetwister.doc.LazyEntityView imageView;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables

}
