/*
 * @(#)TextView.java
 * CubeTwister. Copyright Â© 2020 Werner Randelshofer, Switzerland. MIT License.
 */
package ch.randelshofer.cubetwister.doc;

import ch.randelshofer.gui.Fonts;
import ch.randelshofer.undo.Undoable;

import javax.swing.UIManager;
import javax.swing.border.EmptyBorder;
import javax.swing.event.UndoableEditListener;

/**
 * TextView.
 *
 * @author Werner Randelshofer
 */
public class TextView extends javax.swing.JPanel implements Undoable/*, PropertyChangeListener*/ {
    private TextModel model;
    private final static long serialVersionUID = 1L;

    /**
     * Creates new form CubeScriptView
     */
    public TextView() {
        this(null);
    }

    /**
     * Creates new form CubeScriptView
     */
    public TextView(TextModel m) {
        initComponents();
        bodyTextArea.setFont(Fonts.getApplicationFont());
        setModel(m);

        if ("Windows".equals(UIManager.getLookAndFeel().getID())) {
            setBorder(new EmptyBorder(6,10,10,10));
        }
    }

    /**
     * Adds an UndoableEditListener.
     */
    public void addUndoableEditListener(UndoableEditListener listener) {
    }
    /**
     * Removes an UndoableEditListener.
     */
    public void removeUndoableEditListener(UndoableEditListener listener) {
    }

    public void setModel(TextModel s) {
        /*
        if (model != null) {
            model.removePropertyChangeListener(this);
        }*/
        model = s;
        if (model == null) {
            titleTextField.setDocument(new javax.swing.text.PlainDocument());
            bodyTextArea.setDocument(new javax.swing.text.PlainDocument());
            authorTextField.setDocument(new javax.swing.text.PlainDocument());
            dateTextField.setDocument(new javax.swing.text.PlainDocument());
        } else {
            titleTextField.setDocument(model.getNameDocument());
            bodyTextArea.setDocument(model.getDescriptionDocument());
            authorTextField.setDocument(model.getAuthorDocument());
            dateTextField.setDocument(model.getDateDocument());
           // model.addPropertyChangeListener(this);
        }
        updateEnabled();
    }

    public void setEnabled(boolean b) {
        super.setEnabled(b);
        updateEnabled();
    }

    public void updateEnabled() {
        boolean b = model != null && isEnabled();

        java.awt.Component[] c = getComponents();
        for (int i=0; i < c.length; i++) {
            c[i].setEnabled(b);
        }
        bodyTextArea.setEnabled(b);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        titleTextField = new javax.swing.JTextField();
        bodyScrollPane = new javax.swing.JScrollPane();
        bodyTextArea = new javax.swing.JTextArea();
        authorLabel = new javax.swing.JLabel();
        authorTextField = new javax.swing.JTextField();
        dateLabel = new javax.swing.JLabel();
        dateTextField = new javax.swing.JTextField();

        titleLabel.setLabelFor(titleTextField);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ch/randelshofer/cubetwister/Labels"); // NOI18N
        titleLabel.setText(bundle.getString("title")); // NOI18N

        titleTextField.setColumns(2);

        bodyTextArea.setColumns(2);
        bodyTextArea.setLineWrap(true);
        bodyTextArea.setWrapStyleWord(true);
        bodyScrollPane.setViewportView(bodyTextArea);

        authorLabel.setLabelFor(authorTextField);
        authorLabel.setText(bundle.getString("author")); // NOI18N

        dateLabel.setLabelFor(dateTextField);
        dateLabel.setText(bundle.getString("date")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleLabel)
                            .addComponent(authorLabel)
                            .addComponent(dateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                            .addComponent(authorTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                            .addComponent(titleTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)))
                    .addComponent(bodyScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bodyScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorLabel)
                    .addComponent(authorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
/*
    public void propertyChange(java.beans.PropertyChangeEvent propertyChangeEvent) {
    }
*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorLabel;
    private javax.swing.JTextField authorTextField;
    private javax.swing.JScrollPane bodyScrollPane;
    private javax.swing.JTextArea bodyTextArea;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTextField;
    // End of variables declaration//GEN-END:variables

}
