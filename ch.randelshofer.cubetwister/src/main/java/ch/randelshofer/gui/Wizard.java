/*
 * @(#)Wizard.java
 * CubeTwister. Copyright Â© 2020 Werner Randelshofer, Switzerland. MIT License.
 */

package ch.randelshofer.gui;

import org.jhotdraw.annotation.Nonnull;
import org.jhotdraw.util.ResourceBundleUtil;

import javax.swing.AbstractListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.Component;
import java.awt.Font;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ResourceBundle;
/**
 * A wizard is a dialog which guides the user step by step through a task.
 *
 * @author Werner Randelshofer
 */
public class Wizard extends javax.swing.JDialog
implements PropertyChangeListener, ListSelectionListener {
    private final static long serialVersionUID = 1L;
    /**
     * The resource bundle used for internationalisation.
     */
    private ResourceBundleUtil labels;

    private WizardModel model;

    private static class ListModelAdapter extends AbstractListModel {
    private final static long serialVersionUID = 1L;
        private WizardModel model;

        public void setModel(WizardModel model) {
            this.model = model;
        }

        public Object getElementAt(int index) {
            return model.getPanelTitle(index);
        }

        public int getSize() {
            return model.getPanelCount();
        }

    }
    private ListModelAdapter listModelAdapter;


    /** Creates new form Wizard */
    public Wizard(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        Font f;

        labels = new ResourceBundleUtil(ResourceBundle.getBundle("ch.randelshofer.gui.Labels"));

        initComponents();


        stepListPanel.setVisible(false);

        f = Fonts.getEmphasizedDialogFont();
        stepsLabel.setFont(f);
        stepLabel.setFont(f);
        stepList.getSelectionModel().addListSelectionListener(this);
    }

    @SuppressWarnings({"deprecation"})
    public void show() {
        stepList.setSelectedIndex(0);
        super.show();
    }
    @SuppressWarnings({"deprecation"})
    public void show(Component parent) {
        setLocationRelativeTo(parent);
        stepList.setSelectedIndex(0);
        super.show();
    }

    public WizardModel getModel() {
        return model;
    }

    public void setModel(@Nonnull WizardModel m) {
        if (model != null) {
            model.removePropertyChangeListener(this);
            stepList.clearSelection();
        }

        this.model = m;

        if (model != null) {
            if (listModelAdapter == null) {
                listModelAdapter = new ListModelAdapter();
                stepList.setModel(listModelAdapter);
            }
            listModelAdapter.setModel(m);
            stepList.setSelectedIndex(0);
            setTitle(model.getTitle());
            finishButton.setEnabled(model.canFinish());
            m.addPropertyChangeListener(this);
        }
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        stepListPanel = new javax.swing.JPanel();
        stepsLabel = new javax.swing.JLabel();
        verticalSeparator = new javax.swing.JSeparator();
        stepList = new javax.swing.JList();
        currentStepPanel = new javax.swing.JPanel();
        stepLabel = new javax.swing.JLabel();
        stepPanel = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        controlsPanel = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        finishButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        stepListPanel.setLayout(new java.awt.GridBagLayout());

        stepsLabel.setText(labels.getString("stepsTitle"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 12);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stepListPanel.add(stepsLabel, gridBagConstraints);

        verticalSeparator.setOrientation(javax.swing.SwingConstants.VERTICAL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        stepListPanel.add(verticalSeparator, gridBagConstraints);

        stepList.setBackground(getBackground());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(12, 20, 12, 12);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        stepListPanel.add(stepList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        getContentPane().add(stepListPanel, gridBagConstraints);

        currentStepPanel.setLayout(new java.awt.GridBagLayout());

        stepLabel.setText("Current Step");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(20, 12, 0, 20);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        currentStepPanel.add(stepLabel, gridBagConstraints);

        stepPanel.setLayout(new java.awt.BorderLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 20);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        currentStepPanel.add(stepPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(currentStepPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jSeparator2, gridBagConstraints);

        controlsPanel.setLayout(new java.awt.GridBagLayout());

        cancelButton.setText(labels.getString("cancelButton"));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel(evt);
            }
        });

        controlsPanel.add(cancelButton, new java.awt.GridBagConstraints());

        backButton.setText(labels.getString("backButton"));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        controlsPanel.add(backButton, gridBagConstraints);

        nextButton.setText(labels.getString("nextButton"));
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next(evt);
            }
        });

        controlsPanel.add(nextButton, new java.awt.GridBagConstraints());

        finishButton.setText(labels.getString("finishButton"));
        finishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finish(evt);
            }
        });

        controlsPanel.add(finishButton, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(12, 14, 20, 14);
        getContentPane().add(controlsPanel, gridBagConstraints);

        pack();
    }//GEN-END:initComponents

    private void cancel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel
        if (model != null) {
            model.cancel();
        }
        setVisible(false);
    }//GEN-LAST:event_cancel

    private void finish(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finish
        if (model != null) {
            model.finish();
        }
        setVisible(false);
    }//GEN-LAST:event_finish

    private void next(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next
        if (model != null) {
            int i = stepList.getSelectedIndex();
            if (i < model.getPanelCount() - 1) {
                stepList.setSelectedIndex(i + 1);
            }
        }
    }//GEN-LAST:event_next

    private void back(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back
        if (model != null) {
            int i = stepList.getSelectedIndex();
            if (i > 0) {
                stepList.setSelectedIndex(i - 1);
            }
        }
    }//GEN-LAST:event_back

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new Wizard(new javax.swing.JFrame(), true).show();
    }

    public void propertyChange(@Nonnull PropertyChangeEvent evt) {
        String name = evt.getPropertyName();
        if ("title".equals(name)) {
            setTitle(model.getTitle());
        } else if ("canFinish".equals(name)) {
            finishButton.setEnabled(model.canFinish());
        }
    }

    public void valueChanged(@Nonnull ListSelectionEvent e) {
        if (!e.getValueIsAdjusting()) {
            int index = stepList.getSelectedIndex();

            stepPanel.removeAll();
            if (index != -1) {
                stepPanel.add(model.getPanel(index));
                stepLabel.setText(model.getPanelTitle(index));
            }
            stepPanel.invalidate();
            stepPanel.validate();
            stepPanel.repaint();
            backButton.setEnabled(index > 0);
            nextButton.setEnabled(index < model.getPanelCount() - 1);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel controlsPanel;
    private javax.swing.JPanel currentStepPanel;
    private javax.swing.JButton finishButton;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel stepLabel;
    private javax.swing.JList stepList;
    private javax.swing.JPanel stepListPanel;
    private javax.swing.JPanel stepPanel;
    private javax.swing.JLabel stepsLabel;
    private javax.swing.JSeparator verticalSeparator;
    // End of variables declaration//GEN-END:variables

}
